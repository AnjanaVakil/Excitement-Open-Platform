package eu.excitement.entailment.core;

/**
 * This 
 * 
 * 
 * Currently the hierarchy is; 
 * Entailment --------- Paraphrase  
 * NonEntailment ------ Contradiction
 *                 |--- Unknown 
 * Abstain
 * @author Gil 
 * 
 */

public enum DecisionLabel {

	Entailment(null),
	NonEntailment(null),
	Abstain(null),
	Paraphrase(Entailment),
	Contradiction(NonEntailment),
	Unknown(NonEntailment), 
	//YourLabel(Paraphrase), // You can extend it like this...  
	; 
	
	/**
	 * Compares the decision label to another decision label. 
	 * The method checks a "is-a" relationship. For example; 
	 * if a variable is paraphrase (say, <code>a=DecisionLabel.Paraphrase;</code>), both  
	 * <code>a.is(DecisionLabel.Paraphrase)</code> and <code>a.is(DecisionLabel.Entailment)</code> 
	 * returns true.  
	 * 
	 * @param e The DecisionLabel to be compared. 
	 * @return true if the label is one of e (is-a); false otherwise. 
	 * 
	 */	
	public boolean is(DecisionLabel e) {
	if (e == null) {
		return false;
	}
	for(DecisionLabel t = this; t != null; t=t.parent)
		if (e == t) {
			return true;
		}
		return false;
	}
	
	private DecisionLabel parent = null;
	private DecisionLabel(DecisionLabel parent) {
		this.parent = parent;
	}

}
